P185 支持度计算

SELECT
TRANSACTION_COUNT.COUNT_NUMBER/ TRANSACTION_ALL.COUNT_NUMBER
FROM
(
	SELECT COUNT(*) COUNT_NUMBER
	FROM
	(SELECT Serial FROM Buy_list WHERE Type='啤酒') R1
	INNER JOIN
	(SELECT Serial FROM Buy_list WHERE Type='香烟') R2
	ON
	R1.Serial=R2.Serial
) TRANSACTION_COUNT
INNER JOIN
(
	SELECT COUNT(DISTINCT Serial) COUNT_NUMBER
	FROM
	Buy_list
) TRANSACTION_ALL
ON 1=1;


P186 置信度计算

CREATE TABLE TEMP(R1_Serial VARCHAR(64), R2_Serial VARCHAR(64)) AS
SELECT *
FROM
(SELECT Serial R1_Serial  FROM Buy_list WHERE Type='啤酒') R1 
LEFT JOIN
(SELECT Serial R2_Serial FROM Buy_list WHERE Type='香烟') R2
ON R1.R1_Serial=R2.R2_Serial;

SELECT R2.R2_COUNT/R1.R1_COUNT
FROM
(SELECT COUNT(*) R2_COUNT
FROM
TEMP
WHERE R2_Serial IS NOT NULL) R2
INNER JOIN
(SELECT COUNT(*) R1_COUNT
FROM
TEMP) R1
ON 1=1;

P190 模式表

CREATE TABLE PATTERNS(Serial VARCHAR(64), Type1 VARCHAR(64), Type2 VARCHAR(64)) AS
SELECT R1.Serial Serial, R1.Type1 Type1, R2.Type2 Type2
FROM
(SELECT Serial, Type Type1 FROM Buy_list) R1
INNER JOIN
(SELECT Serial, Type Type2 FROM Buy_list) R2
ON R1.Serial=R2.Serial AND R1.Type1<>R2.Type2;

P190 求数量

SELECT COUNT(*) Support, Type1, Type2
FROM
PATTERNS
GROUP BY Type1, Type2;

P191 求置信度

SELECT R1.Type1, R1.Type2, R1.Type_count/TYPE_COUNT_VIEW.Type_count Confidence
FROM
(SELECT COUNT(*) Type_count, Type1, Type2
FROM
PATTERNS
GROUP BY Type1, Type2) R1
INNER JOIN
TYPE_COUNT_VIEW
ON R1.Type1=TYPE_COUNT_VIEW.Type;

P192 求提升度

SELECT FRACTION.Type1,FRACTION.Type2,FRACTION.PBA/NUMERATOR.PBPossibility
FROM
(
  SELECT R1.Support/R2.TRANSACTION_COUNT PBA, R1.Type1, R1.Type2
  FROM
  (
    SELECT COUNT(*) Support, Type1, Type2
    FROM
    PATTERNS
    GROUP BY Type1, Type2
  ) R1
  INNER JOIN
  (
    SELECT COUNT(DISTINCT Serial) TRANSACTION_COUNT, Type1
    FROM
    PATTERNS
    GROUP BY Type1
  ) R2
  ON R1.Type1=R2.Type1
) FRACTION
LEFT OUTER JOIN
(
  SELECT R3.counts/R4.TRANSACTION_COUNT PB, Type2
  FROM
  (
     SELECT COUNT(DISTINCT Serial) counts, Type2
     FROM PATTERNS
     GROUP BY Type2
  ) R3
  INNER JOIN
  (
     SELECT COUNT(DISTINCT Serial) TRANSACTION_COUNT
     FROM
     PATTERNS
  ) R4
  ON 1=1
) NUMERATOR
ON FRACTION.Type2=NUMERATOR.Type2;

